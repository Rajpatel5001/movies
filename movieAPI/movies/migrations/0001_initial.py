# Generated by Django 4.1.7 on 2023-03-06 08:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='genresmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('genre', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Imagesmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('img', models.ImageField(max_length=255, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MoviesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('storyline', models.TextField()),
                ('rating', models.DecimalField(decimal_places=2, max_digits=4)),
                ('cost', models.PositiveIntegerField()),
                ('profit', models.PositiveIntegerField()),
                ('year', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('film_certificate', models.CharField(choices=[('U', 'U'), ('U/A', 'U/A'), ('A', 'A'), ('S', 'S')], max_length=20)),
                ('cast_on', models.CharField(choices=[('Amazon Prime', 'Amazon Pprime'), ('Netflix', 'Netflix'), ('Disney + Hotstar ', 'Disney + Hotstar'), ('Zee5', 'Zee5'), ('Voot', 'Voot'), ('MX Player', 'MX Player')], max_length=50)),
                ('img', models.ImageField(max_length=255, upload_to='')),
                ('genres', models.ManyToManyField(related_name='moviegenres', to='movies.genresmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='songModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('songname', models.CharField(max_length=100)),
                ('singer', models.CharField(max_length=100)),
                ('relased_data', models.DateField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song', to='movies.moviesmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='movies.moviesmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='moviesmodel',
            name='teammates',
            field=models.ManyToManyField(related_name='movieteammates', to='movies.personmodel'),
        ),
        migrations.CreateModel(
            name='actorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_At', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('birthplace', models.CharField(max_length=100)),
                ('born', models.DateField()),
                ('height', models.PositiveSmallIntegerField()),
                ('weight', models.PositiveSmallIntegerField()),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], max_length=20)),
                ('status', models.CharField(choices=[('Never Married', 'Never Married'), ('Married', 'Married'), (' Divorced', ' Divorced')], max_length=20)),
                ('Awards', models.CharField(max_length=200)),
                ('familybackground', models.TextField()),
                ('otheroccupation', models.CharField(max_length=100)),
                ('biodata', models.TextField()),
                ('movies', models.ManyToManyField(related_name='movieactor', to='movies.moviesmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
